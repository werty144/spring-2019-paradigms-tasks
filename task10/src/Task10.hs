module Task10 where

-- В этом домашнем задании вам предстоит промоделировать битвы роботов
-- Цель этого дз -- познакомить вас с основами синтаксиса языка и показать,
-- как моделировать концепции из объектно-ориентированного программирования
-- в функциональном стиле

-- Пока не будем писать типы, потому что нужно довольно сложное объяснение =)
-- Вместо этого, напишем конструктор для робота
-- В качестве состояния робот имеет три параметра -- имя, силу атаки и уровень жизни 

robot (name, attack, hp) = \message -> message (name, attack, hp)

-- У объектов есть геттеры или аксессоры -- функции, которые
-- позволяют нам получить доступ к состоянию объекта
-- Напишем их и мы

-- вспомогательные функции-проекции для троек
name (myName, _, _) = myName
attack (_, myAttack, _) = myAttack
health (_, _, myHealth) = myHealth

-- А вот и сами геттеры
getName robot = robot name
getAttack robot = robot attack
getHealth robot = robot health

-- Аналогичным образом напишите сеттеры, функции, которые устанавливают 
-- состояние робота

setName = undefined
setAttack = undefined
setHealth = undefined

-- Напишите в комментариях типы этих функций
-- Что они принимают на вход и что возвращают?

-- Напишите функцию, которая ведет себя как __str__
-- То есть печатает информацию о роботе на экран в виде:
-- > marvin = robot ("Marvin", 100, 500)
-- > printRobot marvin
-- > "Marvin, attack: 100, health: 500"

-- Давайте теперь научим роботов драться друг с другом
-- Напишем функцию damage которая причиняет роботу урон
damage victim amount = victim (\(name, attack, hp) -> robot (name, attack, hp - amount))

-- Напишите функцию, которая моделирует один раунд схватки между 
-- двумя роботами
fight attacker defender = undefined

-- Затем напишите функцию, которая бы моделировала три раунда схватки между 
-- двумя роботами и возвращала бы победителя
threeRoundFight attacker defender = undefined

-- Используя встроенные функции, напишите функцию, которая бы брала армию
-- роботов(список роботов) и возвращала бы среднюю атаку
avgAttack roboter = undefined

-- Создайте список из трех роботов
-- Затем создайте четвертого
-- Напишите замыкание для метода fight, которое бы позволяло четвертому роботу
-- сразиться с первыми тремя используя функцию map
-- Наконец, используя filter определите, кто из роботов выжил,
-- То есть имел положительный уровень жизни
